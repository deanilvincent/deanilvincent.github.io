I"8<p>Automapper is very useful especially if you want to avoid too much manual mapping from DTO class (Data transfer object) to your Model class vice versa. But what is Automapper?</p>

<p>‚ÄúAutoMapper is a simple little library built to solve a deceptively complex problem - getting rid of code that mapped one object to another. This type of code is rather dreary and boring to write, so why not invent a tool to do it for us?‚Äù - <a href="https://automapper.org/">Automapper.org</a></p>

<p>Pretty sure you‚Äôve seen or even tried using this kind of code scenario.</p>

<p>CustomerDto.cs</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public class CustomerDto {
    public int CustomerId {get;set}
    public string Firstname {get;set}
    ... (let's say you have many properties)
}
</code></pre></div></div>

<p>And you want to map it to your model class.</p>

<p>Customer.cs</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public class Customer {
    public int CustomerId {get;set}
    public string Firstname {get;set}
    ...
}
</code></pre></div></div>

<p>What you usually do is manually do this:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>...
public void ManuallyMap(CustomerDto dto)
var customer = new Customer{
    CustomerId = dto.CustomerId,
    Firstname = dto.Firstname,
    ... so on and so forth.
}
...
</code></pre></div></div>

<p>This kind of approach is not good because you waste a lot of time manually mapping each property. Good thing, you AutoMapper is available in <a href="https://www.nuget.org/">nuget package manager</a> where you can just simply install.</p>
<h3 id="ftf-first-things-first">FTF (First Things First)</h3>

<p>Make sure you‚Äôve already created or you have existing ASP.NET Core project (MVC or Web API).</p>

<h3 id="10-install-the-package">1.0 Install the Package</h3>
<p>1.1 Open the terminal and execute the command or open Nuget Package Manager. Look for this package. <code class="highlighter-rouge">AutoMapper.Extensions.Microsoft.DependencyInjection</code>
<img src="https://user-images.githubusercontent.com/10904957/65323593-61b43980-dbdc-11e9-8eab-fb0781427a5d.PNG" alt="Mark Deanil Vicente" /></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Install-Package AutoMapper.Extensions.Microsoft.DependencyInjection
</code></pre></div></div>

<p>This is an AutoMapper extensions for ASP.NET Core project.</p>
<h3 id="setup-automapper-helper-class-i-named-this-class-automapperprofilecs-you-can-map-multiple-dtos--model-class-in-there">Setup AutoMapper Helper class. I named this class <code class="highlighter-rouge">AutoMapperProfile.cs</code>. You can map multiple dtos &amp; model class in there.</h3>

<p>I include this class inside my ‚ÄúHelpers‚Äù folder but it depends on you where do you want to store this class file.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>using AutoMapper;

public class AutoMapperProfile : Profile 
{
    public AutoMapperProfile()
    {
        CreateMap&lt;CustomerDto, Customer&gt;();
    }
}
</code></pre></div></div>

<h3 id="modify-startupcs">Modify <code class="highlighter-rouge">Startup.cs</code></h3>

<p>If you have some questions or comments, please drop it below üëá :)</p>
:ET