I"Ú<p>Automapper is very useful especially if you want to avoid too much manual mapping from DTO class (Data transfer object) to your Model class vice versa. But what is Automapper?</p>

<p>‚ÄúAutoMapper is a simple little library built to solve a deceptively complex problem - getting rid of code that mapped one object to another. This type of code is rather dreary and boring to write, so why not invent a tool to do it for us?‚Äù - <a href="https://automapper.org/">Automapper.org</a></p>

<p>Pretty sure you‚Äôve seen or even tried using this kind of code scenario.</p>

<p>CustomerDto.cs</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public class CustomerDto {
    public int CustomerId {get;set}
    public string Firstname {get;set}
    ... (let's say you have many properties)
}
</code></pre></div></div>

<p>And you want to map it to your model class.</p>

<p>Customer.cs</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public class Customer {
    public int CustomerId {get;set}
    public string Firstname {get;set}
    ...
}
</code></pre></div></div>

<p>What you usually do is manually do this:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>...
public void ManuallyMap(CustomerDto dto)
var customer = new Customer{
    CustomerId = dto.CustomerId,
    Firstname = dto.Firstname,
    ... so on and so forth.
}
...
</code></pre></div></div>

<p>This kind of approach is not good because you waste a lot of time manually mapping each property. Good thing, you AutoMapper is available in <a href="https://www.nuget.org/">nuget package manager</a> where you can just simply install.</p>
<h3 id="ftf-first-things-first">FTF (First Things First)</h3>

<p>Make sure you‚Äôve already created or you have existing ASP.NET Core project (MVC or Web API).</p>

<h3 id="10-install-the-package">1.0 Install the Package</h3>
<p>1.1 Open the terminal and execute the command or open Nuget Package Manager. Look for this package. <code class="highlighter-rouge">AutoMapper.Extensions.Microsoft.DependencyInjection</code>
<img src="https://user-images.githubusercontent.com/10904957/65323593-61b43980-dbdc-11e9-8eab-fb0781427a5d.PNG" alt="Mark Deanil Vicente" /></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Install-Package AutoMapper.Extensions.Microsoft.DependencyInjection
</code></pre></div></div>

<p>This is an AutoMapper extensions for ASP.NET Core project.</p>
<h3 id="setup-automapper-helper-class">Setup AutoMapper Helper class</h3>

<p>I include this class inside my Helpers folder but it depends on you where do you want to store this class file.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>using AutoMapper;

public class AutoMapperProfile : Profile 
{
    public AutoMapperProfile()
    {
        CreateMap&lt;CustomerDto, Customer&gt;();
    }
}
</code></pre></div></div>

<p>2.1 Create a web.config file inside the ‚Äúmyvueapp‚Äù and paste these codes:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="nt">&lt;configuration&gt;</span>
    <span class="nt">&lt;system.webServer&gt;</span>
        <span class="nt">&lt;rewrite&gt;</span>
            <span class="nt">&lt;rules&gt;</span>
                <span class="nt">&lt;rule</span> <span class="na">name=</span><span class="s">"Handle History Mode and custom 404/500"</span> <span class="na">stopProcessing=</span><span class="s">"true"</span><span class="nt">&gt;</span>
                    <span class="nt">&lt;match</span> <span class="na">url=</span><span class="s">"(.*)"</span> <span class="nt">/&gt;</span>
                    <span class="nt">&lt;conditions</span> <span class="na">logicalGrouping=</span><span class="s">"MatchAll"</span><span class="nt">&gt;</span>
                        <span class="nt">&lt;add</span> <span class="na">input=</span><span class="s">"{REQUEST_FILENAME}"</span> <span class="na">matchType=</span><span class="s">"IsFile"</span> <span class="na">negate=</span><span class="s">"true"</span> <span class="nt">/&gt;</span>
                        <span class="nt">&lt;add</span> <span class="na">input=</span><span class="s">"{REQUEST_FILENAME}"</span> <span class="na">matchType=</span><span class="s">"IsDirectory"</span> <span class="na">negate=</span><span class="s">"true"</span> <span class="nt">/&gt;</span>
                    <span class="nt">&lt;/conditions&gt;</span>
                    <span class="nt">&lt;action</span> <span class="na">type=</span><span class="s">"Rewrite"</span> <span class="na">url=</span><span class="s">"/"</span> <span class="nt">/&gt;</span>
                <span class="nt">&lt;/rule&gt;</span>
            <span class="nt">&lt;/rules&gt;</span>
        <span class="nt">&lt;/rewrite&gt;</span>
        <span class="nt">&lt;httpErrors&gt;</span>
            <span class="nt">&lt;remove</span> <span class="na">statusCode=</span><span class="s">"404"</span> <span class="na">subStatusCode=</span><span class="s">"-1"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;remove</span> <span class="na">statusCode=</span><span class="s">"500"</span> <span class="na">subStatusCode=</span><span class="s">"-1"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;error</span> <span class="na">statusCode=</span><span class="s">"404"</span> <span class="na">path=</span><span class="s">"/survey/notfound"</span> <span class="na">responseMode=</span><span class="s">"ExecuteURL"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;error</span> <span class="na">statusCode=</span><span class="s">"500"</span> <span class="na">path=</span><span class="s">"/survey/error"</span> <span class="na">responseMode=</span><span class="s">"ExecuteURL"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/httpErrors&gt;</span>
        <span class="nt">&lt;modules</span> <span class="na">runAllManagedModulesForAllRequests=</span><span class="s">"true"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/system.webServer&gt;</span>
<span class="nt">&lt;/configuration&gt;</span>
</code></pre></div></div>

<p>2.2 Save the file.</p>

<h3 id="30-create-a-website-on-iis">3.0 Create a website on IIS</h3>

<p>3.1 Open the IIS app and create a new website under the ‚ÄúSites‚Äù option and name it whatever you prefer. In my example, I name it as ‚Äúmyvuewebsite‚Äù. Locate the path of ‚Äúmyvueapp‚Äù and specify the specific port that you want.</p>

<p><img src="https://user-images.githubusercontent.com/10904957/61220167-552ce400-a748-11e9-8369-24a99894bbdd.JPG" /></p>

<p>3.2 Click ‚ÄúOk‚Äù when you are done.</p>

<h3 id="40-running-the-app">4.0 Running the app</h3>

<p>4.1 On the right option, you will find the ‚ÄúBrowse ‚Ä¶‚Äù with a port number. Click and it will open the default browser.</p>

<p><img src="https://user-images.githubusercontent.com/10904957/61220385-c9678780-a748-11e9-9ec5-785b2ef493e1.JPG" /></p>

<p><img src="https://user-images.githubusercontent.com/10904957/61220527-12b7d700-a749-11e9-9318-69bac3d202c8.JPG" /></p>

<p>Cool! Now you have Vue.JS app running on IIS.</p>

<p>If you have some questions or comments, please drop it below üëá :)</p>
:ET